{"version":3,"sources":["components/Statistic/Statistics.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/NotificationMessage/Notification.module.css","components/Container/Container.js","components/Statistic/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/NotificationMessage/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Statistics","params","good","neutral","bad","total","positivePercentage","statistics","goodStatistics","middleStatistics","badStatistics","prototype","PropTypes","number","isRequired","Section","title","section","string","FeedbackOptions","onLeaveFeedback","options","map","option","type","button","onClick","name","func","array","Notification","message","notification","Feeedback","useState","setGood","setBad","setNeutral","countTotalFeedback","event","target","prevState","totalCount","toFixed","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d32e38e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__dg1dO\",\"feedback\":\"Statistics_feedback__23-sm\",\"badStatistics\":\"Statistics_badStatistics__2Aanr Statistics_feedback__23-sm\",\"middleStatistics\":\"Statistics_middleStatistics__3_1C8 Statistics_feedback__23-sm\",\"goodStatistics\":\"Statistics_goodStatistics__COouB Statistics_feedback__23-sm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3TY9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3x0x1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1yh49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3L8oU\"};","import s from \"./Container.module.css\"\r\n\r\nfunction Container({children}) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nfunction colorChange(params) {\r\n    if (params >= 75) {\r\n        return s.goodStatistics\r\n    } else if (params >= 50 && params < 75) {\r\n        return s.middleStatistics\r\n    } else {\r\n        return s.badStatistics\r\n    }\r\n}\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <section >\r\n        <div className={s.statistics}>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n        </div>\r\n\r\n        <div>\r\n            <p>Total:{total}</p>\r\n            {total < 1 ? (<p>Positive feedback: 0</p>)\r\n                : (<p className={colorChange(positivePercentage)}>Positive feedback: {positivePercentage}%</p>)}\r\n        </div>\r\n    </section>\r\n)\r\n\r\nStatistics.prototype = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage:PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({title , children }) => (\r\n    <section className={s.section}>\r\n        <h1>{title}</h1>\r\n        {children}\r\n    </section>\r\n)\r\n\r\nSection.prototype = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) =>\r\n  options.map(option => (\r\n    <button key={option} type=\"button\" className={s.button} onClick={onLeaveFeedback} name={option}>\r\n      {option}\r\n    </button>\r\n  ));\r\n\r\nFeedbackOptions.prototype = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({message}) => (\r\n    <h2 className={s.notification}>{message}</h2>\r\n)\r\n\r\nNotification.prototype = {\r\n    message:PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import { useState } from 'react';\r\nimport './App.css';\r\nimport Container from './components/Container';\r\nimport Statistics from './components/Statistic/';\r\nimport Section from './components/Section/';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Notification from './components/NotificationMessage';\r\n\r\nexport default function Feeedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n\r\n  const onButtonStatisticPush = event => {\r\n    const name = event.target.name;\r\n    switch (name) {\r\n      case 'Good':\r\n        setGood(prevState => prevState + 1);\r\n        break;\r\n      case 'Bad':\r\n        setBad(prevState => prevState + 1);\r\n        break;\r\n      case 'Neutral':\r\n        setNeutral(prevState => prevState + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const totalCount = countTotalFeedback();\r\n    const positiveCount = (good * 100) / totalCount;\r\n    return positiveCount.toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Section title=\"Pleas leave feedback\">\r\n        <FeedbackOptions\r\n          options={['Good', 'Neutral', 'Bad']}\r\n          onLeaveFeedback={onButtonStatisticPush}\r\n        />\r\n      </Section>\r\n\r\n      <Section title=\"Statistic\">\r\n        {countTotalFeedback() < 1 ? (\r\n          <Notification message=\"There is no feedback\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positivePercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Feeedback from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Feeedback />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}